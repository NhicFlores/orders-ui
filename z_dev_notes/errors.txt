
ISSUE: 

 тип ./node_modules/@mapbox/node-pre-gyp/lib/util/nw-pre-gyp/index.html
Module parse failed: Unexpected token (1:0)
You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders
> <!doctype html>
| <html>
| <head>

Import trace for requested module:
./node_modules/@mapbox/node-pre-gyp/lib/util/nw-pre-gyp/index.html
./node_modules/@mapbox/node-pre-gyp/lib/ sync ^\.\/.*$
./node_modules/@mapbox/node-pre-gyp/lib/node-pre-gyp.js
./node_modules/bcrypt/bcrypt.js
./actions/register.ts
./components/auth/register-form.tsx

looking at stackoverflow, threads on npm and nextjs github pages, and reddit threads, most people were saying it was a node module issue.
The suggestion was to install the latest versions of npm and node 

FIX: 
tag the file using bcrypt as a server component 'use server 'I was using bcrypt in server actions, but I hadn't tagged the file with the 'use server' tag 
https://github.com/kelektiv/node.bcrypt.js/issues/979 


after adding form validation with safeParse in authentication server action I got this error in the useFormStatus hook 

No overload matches this call.
  Overload 1 of 2, '(action: (state: "Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined) => "Invalid Credentials" | "Something went wrong." | { ...; } | Promise<...> | undefined, initialState: "Invalid Credentials" | ... 2 more ... | undefined, permalink?: string | undefined): [state: ...]', gave the following error.
    Argument of type '(prevState: string | undefined, formData: FormData) => Promise<"Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined>' is not assignable to parameter of type '(state: "Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined) => "Invalid Credentials" | "Something went wrong." | { ...; } | Promise<...> | undefined'.
      Target signature provides too few arguments. Expected 2 or more, but got 1.
  Overload 2 of 2, '(action: (state: "Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined, payload: FormData) => "Invalid Credentials" | "Something went wrong." | { ...; } | Promise<...> | undefined, initialState: "Invalid Credentials" | ... 2 more ... | undefined, permalink?: string | undefined): [state: ...]', gave the following error.
    Argument of type '(prevState: string | undefined, formData: FormData) => Promise<"Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined>' is not assignable to parameter of type '(state: "Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined, payload: FormData) => "Invalid Credentials" | "Something went wrong." | { ...; } | Promise<...> | undefined'.
      Types of parameters 'prevState' and 'state' are incompatible.
        Type '"Invalid Credentials" | "Something went wrong." | { error: ZodError<{ email: string; password: string; }>; } | undefined' is not assignable to type 'string | undefined'.
          Type '{ error: z.ZodError<{ email: string; password: string; }>; }' is not assignable to type 'string'.ts(2769)